(window.webpackJsonp=window.webpackJsonp||[]).push([[235],{661:function(s,t,a){"use strict";a.r(t);var n=a(29),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"object-c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-c"}},[s._v("#")]),s._v(" Object-C")]),s._v(" "),a("p",[s._v("clang -rewrite-objc 源代码文件名")]),s._v(" "),a("h3",{attrs:{id:"多线程编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多线程编程"}},[s._v("#")]),s._v(" 多线程编程")]),s._v(" "),a("ol",[a("li",[s._v("一个CPU执行一个无分叉的路径")]),s._v(" "),a("li",[s._v("一个cup核执行多条不同路径上的不同命令")]),s._v(" "),a("li",[s._v('从切换目标路径专用的内存块中，复原CPU的寄存信息，继续执行切换路径的CPU命令列。这被称为"上下文切换"')])]),s._v(" "),a("p",[s._v("多线程发生的问题")]),s._v(" "),a("ol",[a("li",[s._v("多个线程更新相同的资源会导致数据不一致（数据竞争）")]),s._v(" "),a("li",[s._v("停止等待事件的线程会导致多个线程相互持续等待（死锁）")]),s._v(" "),a("li",[s._v("使用太多线程会消耗大量的内存")])]),s._v(" "),a("p",[s._v("尽管如此 多线程可保证应用程序的响应性能\n（Runloop的主线程）")]),s._v(" "),a("h4",{attrs:{id:"简单的多线程技术"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单的多线程技术"}},[s._v("#")]),s._v(" 简单的多线程技术")]),s._v(" "),a("ol",[a("li",[s._v("[self performSelectorInBackground:@selector(doSomeThings) withObject: nil];执行后台线程")]),s._v(" "),a("li",[s._v("[self performSelectorOnMainThread:@selector(mianDoWork) withObject:nil waitUntilDone: YES]; 回到主线程")])]),s._v(" "),a("h4",{attrs:{id:"gcd-grand-central-dispatch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gcd-grand-central-dispatch"}},[s._v("#")]),s._v(" GCD (Grand Central DisPatch)")]),s._v(" "),a("p",[s._v("GCD 是异步执行任务的技术之一。一般将应用程序中记述的线程管理用的代码在系统级中实现。\n开发者只需要定义想执行的任务并追加到适合的 Dispatch Queue中，GCD就能生成必要的线程并计划执行任务。")]),s._v(" "),a("p",[s._v("Dispatch Queue 是执行处理的等待队列。dispatch queue 按照追加的顺序（FIFO）执行处理。\nDispatch Queue 分两种：\nSerial Dispatch Queue 等待现在执行中处理结果。Serial 会产生数据竞争，等问题。\nConcurrent Dispatch Queue 不等待现在执行中处理结果。")]),s._v(" "),a("p",[s._v("Main Dispatch Queue: 在主线程执行的队列。\nGlobal Dispatch Queue: 全局的执行队列。可以设置4个优先级。")]),s._v(" "),a("div",{staticClass:"language-Object-C line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);\n    dispatch_async(queue, ^{\n        NSLog(@"在后台处理线程");\n        dispatch_async(dispatch_get_main_queue(), ^{\n            NSLog(@"回到主线程");\n        });\n    });\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("div",{staticClass:"language-Swift line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("DispatchQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("global")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("async"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"队列执行"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("DispatchQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("async "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"主线程执行"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("dispatch_once 函数是指保证在应用程序执行中只执行一次指定处理的API")]),s._v(" "),a("div",{staticClass:"language-Swift line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);